├── .gitignore
├── [assets]/
│   ├── [css]/
│   │   ├── [page_specific]/
│   │   │   ├── about.css
│   │   │       --- Start of about.css ---

│   │   │       --- End of about.css ---
│   │   │   └── home.css
│   │   │       --- Start of home.css ---
│   │   │       /* assets/css/page_specific/home.css */
│   │   │       
│   │   │       /* ... previous styles ... */
│   │   │       
│   │   │       /* Prevent scrolling on the homepage */
│   │   │       body, html {
│   │   │           overflow: hidden;
│   │   │           height: 100%; /* Ensure the page height is restricted */
│   │   │           margin: 0; /* Remove any default margins that might cause scrollbars */
│   │   │           padding: 0;
│   │   │       }
│   │   │       
│   │   │       /* Adjust layout to position content closer to the top */
│   │   │       #main-container {
│   │   │           position: relative; /* To position the tooltip absolutely within it */
│   │   │           display: flex;
│   │   │           flex-direction: column;
│   │   │           align-items: center;
│   │   │           justify-content: flex-start; /* Align items closer to the top */
│   │   │           height: 100vh; /* Full viewport height */
│   │   │           text-align: center;
│   │   │           background: #4b0049; /* Example background color */
│   │   │           padding: 0px 20px; /* Add some top padding for spacing */
│   │   │           gap: 20px; /* Space between elements */
│   │   │       }
│   │   │       
│   │   │       /* Style the site logo */
│   │   │       #site-logo {
│   │   │           width: 250px; /* Set the logo size */
│   │   │           height: auto;
│   │   │           margin-bottom: 20px;
│   │   │           z-index: 2;
│   │   │       }
│   │   │       
│   │   │       /* Style the main menu */
│   │   │       #main-menu {
│   │   │           position: relative; /* Ensure menu has a positioning context */
│   │   │           z-index: 2; /* Higher z-index to stay above bubbles */
│   │   │           margin: 1% 0 30% 0; /* Positioning higher up */
│   │   │       }
│   │   │       
│   │   │       #main-menu ul {
│   │   │           list-style: none;
│   │   │           padding: 0;
│   │   │           margin: 0;
│   │   │           display: flex;
│   │   │           flex-direction: column;
│   │   │           gap: 15px;
│   │   │       }
│   │   │       
│   │   │       #main-menu ul li {
│   │   │           font-family: 'HotMustardBTNRegular', sans-serif;
│   │   │           font-size: 36px;
│   │   │           text-transform: uppercase;
│   │   │           letter-spacing: 1.5px;
│   │   │       }
│   │   │       
│   │   │       #main-menu ul li a {
│   │   │           text-decoration: none;
│   │   │           color: #fff;
│   │   │           transition: color 0.3s ease;
│   │   │       }
│   │   │       
│   │   │       #main-menu ul li a:hover {
│   │   │           color: #ff69b4; /* Highlight color on hover */
│   │   │       }
│   │   │       
│   │   │       /* Hide the dynamic header and footer on this page and this page only */
│   │   │       #header,
│   │   │       #footer {
│   │   │           display: none;
│   │   │       }
│   │   │       
│   │   │       /* Column Container Styles */
│   │   │       .column-container {
│   │   │           display: flex;
│   │   │           justify-content: space-between; /* Space columns evenly */
│   │   │           align-items: flex-start; /* Align items to the start of the container */
│   │   │           width: 100vw; /* Full width */
│   │   │           height: 100vh;
│   │   │           margin-top: 0px; /* Space above the columns */
│   │   │           overflow: hidden; /* Ensure content doesn't overflow */
│   │   │       }
│   │   │       
│   │   │       #column1 {
│   │   │           position: relative; /* Added to position tooltip absolutely within it */
│   │   │           flex: 1; /* Each column takes equal space */
│   │   │           padding: 20px; /* Inner padding */
│   │   │           background: url('../../gui/class.webp') no-repeat center center; /* Background image */
│   │   │           background-size: cover; /* Cover the entire column */
│   │   │           display: flex; /* Make it a flex container */
│   │   │           flex-direction: column; /* Stack children vertically */
│   │   │           justify-content: flex-end; /* Align children to the bottom */
│   │   │           height: 100%; /* Ensure it takes full height */
│   │   │           overflow: hidden; /* Enable cropping */
│   │   │       }
│   │   │       
│   │   │       #column2 {
│   │   │           position: relative; /* Ensure that .bubble-container is positioned relative to #column2 */
│   │   │           flex: 1; /* Each column takes equal space */
│   │   │           padding: 20px; /* Inner padding */
│   │   │           /* No background color */
│   │   │           height: 100vh;
│   │   │           display: flex;
│   │   │           flex-direction: column;
│   │   │           align-items: center; /* Center items horizontally */
│   │   │           justify-content: center; /* Center items vertically */
│   │   │           text-align: center; /* Center text */
│   │   │           overflow: hidden; /* Ensure bubbles don't cause overflow */
│   │   │           z-index: 1; /* Ensure column content is above bubbles */
│   │   │       }
│   │   │       
│   │   │       #column3 {
│   │   │           flex: 1; /* Each column takes equal space */
│   │   │           padding: 20px; /* Inner padding */
│   │   │           /* Removed position and z-index to prevent overlapping */
│   │   │           position: static;
│   │   │           z-index: auto;
│   │   │       }
│   │   │       
│   │   │       .divider {
│   │   │           width: 2px; /* Width of the divider line */
│   │   │           background-color: black; /* Color of the divider line */
│   │   │           height: auto; /* Full height of the column */
│   │   │       }
│   │   │       
│   │   │       .column-container .divider {
│   │   │           height: 100%; /* Full height */
│   │   │       }
│   │   │       
│   │   │       .matsu-sprite {
│   │   │           transform: scaleX(-1) translateY(20%) translateX(80px); /* Flip horizontally and move down */
│   │   │           width: 140%; /* Enlarge the sprite */
│   │   │           height: auto; /* Maintain aspect ratio */
│   │   │       }
│   │   │       
│   │   │       .matsu-sprite.hidden {
│   │   │           opacity: 0;
│   │   │       }
│   │   │       
│   │   │       /* Tooltip Styles */
│   │   │       .tooltip {
│   │   │           position: absolute;
│   │   │           top: 20%; /* Adjusted to position over Matsu's head */
│   │   │           left: 50%; /* Center horizontally within #column1 */
│   │   │           transform: translate(-50%, -50%);
│   │   │           background-color: rgba(0, 0, 0, 0.85); /* Semi-transparent black */
│   │   │           color: #fff;
│   │   │           padding: 15px 20px;
│   │   │           border-radius: 15px;
│   │   │           max-width: 250px;
│   │   │           font-size: 32px;
│   │   │           display: none; /* Hidden by default */
│   │   │           z-index: 3; /* Ensure tooltip is above bubbles and menu */
│   │   │           box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
│   │   │           white-space: pre-wrap;
│   │   │           font-family: 'Courier New', Courier, monospace;
│   │   │           opacity: 0; /* Start fully transparent */
│   │   │       }
│   │   │       
│   │   │       /* Tooltip visible state */
│   │   │       .tooltip.show {
│   │   │           opacity: 1; /* Fully opaque when shown */
│   │   │       }
│   │   │       
│   │   │       .tooltip.hide {
│   │   │           opacity: 0; /* Fully transparent when hidden */
│   │   │       }
│   │   │       
│   │   │       /* Styling the tooltip's cloud-like arrow */
│   │   │       .tooltip::after {
│   │   │           content: '';
│   │   │           position: absolute;
│   │   │           bottom: -10px; /* Position below the tooltip */
│   │   │           left: 50%;
│   │   │           transform: translateX(-50%);
│   │   │           border-width: 10px;
│   │   │           border-style: solid;
│   │   │           border-color: rgba(0, 0, 0, 0.85) transparent transparent transparent;
│   │   │       }
│   │   │       
│   │   │       /* Cursor effect for typing */
│   │   │       .tooltip::before {
│   │   │           content: '|';
│   │   │           position: absolute;
│   │   │           bottom: 10px;
│   │   │           right: 15px;
│   │   │           animation: blink 1s infinite;
│   │   │           color: #fff;
│   │   │           font-size: 32px;
│   │   │       }
│   │   │       
│   │   │       @keyframes blink {
│   │   │           0%, 50% {
│   │   │               opacity: 1;
│   │   │           }
│   │   │           51%, 100% {
│   │   │               opacity: 0;
│   │   │           }
│   │   │       }
│   │   │       
│   │   │       /* Bubble Container Styles */
│   │   │       .bubble-container {
│   │   │           position: absolute;
│   │   │           bottom: -100px; /* Start below the viewport */
│   │   │           left: 0;
│   │   │           width: 100%;
│   │   │           height: 120%; /* Extend beyond the top to accommodate rising bubbles */
│   │   │           overflow: hidden;
│   │   │           pointer-events: none; /* Allow clicks to pass through */
│   │   │           z-index: 0; /* Ensure bubbles are behind other content */
│   │   │       }
│   │   │       
│   │   │       /* Individual Bubble Styles */
│   │   │       .bubble {
│   │   │           position: absolute;
│   │   │           bottom: 0;
│   │   │           background-color: rgba(255, 255, 255, 0.5); /* Reduced opacity */
│   │   │           border-radius: 50%;
│   │   │           opacity: 0.5; /* Further reduced opacity */
│   │   │           animation: rise linear forwards; /* Changed to 'linear' for consistent speed and 'forwards' to retain final state */
│   │   │       }
│   │   │       
│   │   │       /* Keyframes for Bubble Rising Animation */
│   │   │       @keyframes rise {
│   │   │           0% {
│   │   │               transform: translateY(0) scale(1);
│   │   │               opacity: 0.5;
│   │   │           }
│   │   │           50% {
│   │   │               opacity: 0.8;
│   │   │           }
│   │   │           100% {
│   │   │               transform: translateY(-120vh) scale(1.5); /* Rise beyond the viewport */
│   │   │               opacity: 0;
│   │   │           }
│   │   │       }
│   │   │       
│   │   │       /* Media Queries */
│   │   │       @media (max-width: 768px) {
│   │   │           /* Hide the left and right columns */
│   │   │           #column1,
│   │   │           #column3,
│   │   │           .matsu-sprite {
│   │   │               display: none;
│   │   │           }
│   │   │       
│   │   │           /* Ensure the middle column takes full width */
│   │   │           #column2 {
│   │   │               flex: 1; /* Allow the middle column to take full width */
│   │   │               padding: 20px; /* Maintain padding */
│   │   │           }
│   │   │       
│   │   │           /* Adjust the main container */
│   │   │           #main-container {
│   │   │               flex-direction: column; /* Stack columns vertically */
│   │   │               height: auto; /* Allow height to adjust */
│   │   │           }
│   │   │       
│   │   │           /* Optionally hide dividers */
│   │   │           .divider {
│   │   │               display: none;
│   │   │           }
│   │   │       
│   │   │           /* Adjust tooltip positioning for smaller screens */
│   │   │           .tooltip {
│   │   │               top: 30%; /* Adjust as needed */
│   │   │               left: 50%;
│   │   │               transform: translate(-50%, -50%);
│   │   │               max-width: 200px; /* Smaller width for mobile */
│   │   │           }
│   │   │       
│   │   │           /* Adjust cursor size */
│   │   │           .tooltip::before {
│   │   │               font-size: 14px;
│   │   │               right: 10px;
│   │   │           }
│   │   │       
│   │   │           /* Hide bubble container on smaller screens if desired */
│   │   │           /* Uncomment the following to hide bubbles on mobile devices */
│   │   │           /*
│   │   │           .bubble-container {
│   │   │               display: none;
│   │   │           }
│   │   │           */
│   │   │       }
│   │   │       --- End of home.css ---
│   │   ├── responsive.css
│   │       --- Start of responsive.css ---

│   │       --- End of responsive.css ---
│   │   └── styles.css
│   │       --- Start of styles.css ---
│   │       @font-face {
│   │           font-family: 'HotMustardBTNRegular';
│   │           src: url('../fonts/HotMustardBTNRegular.ttf') format('truetype');
│   │           font-weight: normal;
│   │           font-style: normal;
│   │       }
│   │       
│   │       html, body {
│   │           margin: 0; /* Remove default margin */
│   │           padding: 0; /* Remove default padding */
│   │           height: 100%; /* Ensure full height */
│   │       }
│   │       --- End of styles.css ---
│   ├── [fonts]/
│   │   ├── HotMustardBTNRegular.ttf
│   │   ├── m1.ttf
│   │   ├── n1.ttf
│   │   ├── s1.ttf
│   │   └── y1.ttf
│   ├── [gui]/
│   │   ├── aboutcorridor.webp
│   │   ├── bedroom.png
│   │   ├── class.webp
│   │   ├── closet.png
│   │   ├── club.png
│   │   ├── corridor.png
│   │   ├── house.png
│   │   ├── kitchen.png
│   │   ├── logo.webp
│   │   └── residential.png
│   ├── [images]/
│   │   └── [staff]/
│   ├── [js]/
│   │   ├── main.js
│   │       --- Start of main.js ---

│   │       --- End of main.js ---
│   │   ├── [page_specific]/
│   │   │   ├── about.js
│   │   │       --- Start of about.js ---

│   │   │       --- End of about.js ---
│   │   │   └── home.js
│   │   │       --- Start of home.js ---
│   │   │       // assets/js/page_specific/home.js
│   │   │       
│   │   │       document.addEventListener("DOMContentLoaded", function() {
│   │   │           const menuLinks = document.querySelectorAll("#main-menu ul li a");
│   │   │           const sprite = document.querySelector(".matsu-sprite");
│   │   │           const tooltip = document.querySelector("#tooltip");
│   │   │           const bubbleContainer = document.querySelector(".bubble-container"); // Select the bubble container
│   │   │       
│   │   │           if (sprite && tooltip && bubbleContainer) {
│   │   │               const originalSrc = "assets/sprites/matsu1.webp";
│   │   │               const hoverSrc = "assets/sprites/matsu2.webp";
│   │   │               const preloadedImage = new Image();
│   │   │               preloadedImage.src = hoverSrc;
│   │   │       
│   │   │               const tooltipTexts = {
│   │   │                   "Mods": "Discover a variety of mods to your enjoyment!",
│   │   │                   "Submissions": "Submit your own mods and assets, and share them with the community!",
│   │   │                   "Assets": "Browse and download assets for your projects!",
│   │   │                   "Classroom": "Join our classroom to learn about RenPy, DDLC, and modding!",
│   │   │                   "About": "Learn more about Doki Doki Modding Central!",
│   │   │                   "FAQ": "Find answers to frequently asked questions!"
│   │   │               };
│   │   │       
│   │   │               let typingInterval; // Store the interval ID
│   │   │               let tooltipTimeout; // Store the timeout ID for hiding the tooltip
│   │   │       
│   │   │               const typeText = (text, callback) => {
│   │   │                   let index = 0;
│   │   │                   tooltip.textContent = ''; 
│   │   │                   tooltip.style.display = 'block'; 
│   │   │                   tooltip.classList.remove('hide');
│   │   │                   tooltip.classList.add('show');
│   │   │       
│   │   │                   typingInterval = setInterval(() => {
│   │   │                       if (index < text.length) {
│   │   │                           tooltip.textContent += text.charAt(index);
│   │   │                           index++;
│   │   │                       } else {
│   │   │                           clearInterval(typingInterval);
│   │   │                           if (callback) callback();
│   │   │                       }
│   │   │                   }, 10);
│   │   │               };
│   │   │       
│   │   │               const handleMouseEnter = (event) => {
│   │   │                   sprite.src = hoverSrc;
│   │   │                   const menuItem = event.target.textContent.trim();
│   │   │                   const tooltipText = tooltipTexts[menuItem] || "Information about " + menuItem;
│   │   │                   clearTimeout(tooltipTimeout); // Clear any existing timeout to hide the tooltip
│   │   │                   typeText(tooltipText);
│   │   │               };
│   │   │       
│   │   │               const handleMouseLeave = () => {
│   │   │                   sprite.src = originalSrc;
│   │   │                   clearInterval(typingInterval); // Clear the typing interval
│   │   │                   tooltip.textContent = ''; // Clear the text immediately
│   │   │                   tooltip.classList.remove('show');
│   │   │                   tooltip.classList.add('hide');
│   │   │       
│   │   │                   // Set a timeout to hide the tooltip after a brief delay
│   │   │                   tooltipTimeout = setTimeout(() => {
│   │   │                       tooltip.style.display = 'none';
│   │   │                   }, 500); // Match the transition duration in CSS
│   │   │               };
│   │   │       
│   │   │               menuLinks.forEach(link => {
│   │   │                   link.addEventListener("mouseenter", handleMouseEnter);
│   │   │                   link.addEventListener("mouseleave", handleMouseLeave);
│   │   │                   link.addEventListener("focus", handleMouseEnter);
│   │   │                   link.addEventListener("blur", handleMouseLeave);
│   │   │               });
│   │   │       
│   │   │               // Bubble Effect Implementation
│   │   │       
│   │   │               const MAX_BUBBLES = 30; // Maximum number of bubbles on screen
│   │   │       
│   │   │               const createBubble = () => {
│   │   │                   if (bubbleContainer.children.length >= MAX_BUBBLES) return; // Limit the number of bubbles
│   │   │       
│   │   │                   const bubble = document.createElement('div');
│   │   │                   bubble.classList.add('bubble');
│   │   │       
│   │   │                   // Random size between 10px and 40px
│   │   │                   const size = Math.random() * 30 + 10;
│   │   │                   bubble.style.width = `${size}px`;
│   │   │                   bubble.style.height = `${size}px`;
│   │   │       
│   │   │                   // Random horizontal position (0% to 100%)
│   │   │                   const position = Math.random() * 100;
│   │   │                   bubble.style.left = `${position}%`;
│   │   │       
│   │   │                   // Random animation duration between 8s and 20s
│   │   │                   const duration = Math.random() * 12 + 8;
│   │   │                   bubble.style.animationDuration = `${duration}s`;
│   │   │       
│   │   │                   // Random opacity between 0.5 and 0.7 for variation
│   │   │                   const opacity = Math.random() * 0.2 + 0.5;
│   │   │                   bubble.style.backgroundColor = `rgba(255, 255, 255, ${opacity})`;
│   │   │       
│   │   │                   // Append the bubble to the container
│   │   │                   bubbleContainer.appendChild(bubble);
│   │   │       
│   │   │                   // Remove the bubble after the animation completes to prevent DOM clutter
│   │   │                   bubble.addEventListener('animationend', () => {
│   │   │                       bubble.remove();
│   │   │                   });
│   │   │               };
│   │   │       
│   │   │               // Create bubbles at intervals
│   │   │               const bubbleInterval = setInterval(createBubble, 1000); // Generate a bubble every 1 second
│   │   │       
│   │   │               // Optional: Stop creating bubbles after a certain time or under specific conditions
│   │   │               // For example, stop after 2 minutes:
│   │   │               /*
│   │   │               setTimeout(() => {
│   │   │                   clearInterval(bubbleInterval);
│   │   │               }, 120000); // 120,000 ms = 2 minutes
│   │   │               */
│   │   │           } else {
│   │   │               console.error("Sprite image with class 'matsu-sprite', tooltip with id 'tooltip', or bubble container not found.");
│   │   │           }
│   │   │       });
│   │   │       --- End of home.js ---
│   │   └── plugins.js
│   │       --- Start of plugins.js ---

│   │       --- End of plugins.js ---
│   └── [sprites]/
│       ├── matsu1.webp
│       └── matsu2.webp
├── [components]/
│   ├── footer.css
│       --- Start of footer.css ---
│       footer {
│           background-color: #000000;
│           padding: 20px 0;
│           text-align: center;
│           width: 100%;
│       }
│       
│       footer p {
│           margin: 0 0 10px 0;
│           color: #ffffff;
│           text-decoration: underline;
│       }
│       
│       footer ul {
│           list-style: none;
│           display: flex;
│           justify-content: center;
│           padding: 0;
│           margin: 0;
│       }
│       
│       footer ul li {
│           margin: 0 10px;
│       }
│       
│       footer ul li a {
│           color: #333;
│           text-decoration: none;
│       }
│       
│       footer ul li a:hover {
│           text-decoration: underline;
│       }
│       --- End of footer.css ---
│   ├── footer.html
│       --- Start of footer.html ---
│       <footer>
│           <p>&copy; 2024 DDMC Staff. All rights reserved.</p>
│       </footer>
│       --- End of footer.html ---
│   ├── global.js
│       --- Start of global.js ---
│       // [components]/global.js
│       document.addEventListener("DOMContentLoaded", function() {
│           // Fetch and insert the header
│           fetch("/components/header.html")
│               .then(response => {
│                   if (!response.ok) {
│                       throw new Error('Network response was not ok for header.html');
│                   }
│                   return response.text();
│               })
│               .then(data => {
│                   document.getElementById("header").innerHTML = data;
│               })
│               .catch(error => console.error('Error loading header:', error));
│       
│           // Fetch and insert the footer
│           fetch("/components/footer.html")
│               .then(response => {
│                   if (!response.ok) {
│                       throw new Error('Network response was not ok for footer.html');
│                   }
│                   return response.text();
│               })
│               .then(data => {
│                   document.getElementById("footer").innerHTML = data;
│               })
│               .catch(error => console.error('Error loading footer:', error));
│       });
│       --- End of global.js ---
│   ├── header.css
│       --- Start of header.css ---
│       header {
│           background-color: #333;
│           padding: 20px 0;
│       }
│       
│       header nav ul {
│           list-style: none;
│           display: flex;
│           justify-content: center;
│           margin: 0;
│           padding: 0;
│       }
│       
│       header nav ul li {
│           margin: 0 15px;
│       }
│       
│       header nav ul li a {
│           color: #fff;
│           text-decoration: none;
│           font-size: 18px;
│       }
│       
│       header nav ul li a:hover {
│           text-decoration: underline;
│       }
│       --- End of header.css ---
│   └── header.html
│       --- Start of header.html ---
│       <header>
│           <nav>
│               <ul>
│                   <li><a href="../index.html">Home</a></li>
│                   <li><a href="../pages/about.html">About</a></li>
│                   <li><a href="../pages/faq.html">FAQ</a></li>
│               </ul>
│           </nav>
│       </header>
│       --- End of header.html ---
├── [config]/
│   └── settings.json
│       --- Start of settings.json ---

│       --- End of settings.json ---
├── [data]/
│   └── add data here
├── index.html
    --- Start of index.html ---
    <!-- index.html -->
    
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Doki Doki Modding Central</title>
        <link rel="stylesheet" href="assets/css/styles.css">
        <link rel="stylesheet" href="assets/css/page_specific/home.css">
    </head>
    <body>
        <div id="header"></div>
    
        <main>
            <!-- Central Content Container -->
            <section id="main-container">
                <div class="column-container">
                    <div class="column" id="column1">
                        <img src="assets/sprites/matsu1.webp" alt="Cutout" class="matsu-sprite">
                        <div id="tooltip" class="tooltip"></div>
                    </div>
                    <div class="divider"></div>
                    <div class="column" id="column2">
                        <img src="assets/gui/logo.webp" alt="DDMC Logo" id="site-logo">
                        <nav id="main-menu">
                            <ul>
                                <li><a href="#mods">Mods</a></li>
                                <li><a href="#submissions">Submissions</a></li>
                                <li><a href="#assets">Assets</a></li>
                                <li><a href="#classroom">Classroom</a></li>
                                <li><a href="pages/about.html">About</a></li>
                                <li><a href="#faq">FAQ</a></li>
                            </ul>
                        </nav>
                        <!-- Bubble Container -->
                        <div class="bubble-container"></div>
                    </div>
                    <div class="divider"></div>
                    <div class="column" id="column3">
                        <h2>Showcase coming soon.</h2>
                    </div>
                </div>
            </section>
        </main>
    
        <div id="footer"></div>
    
        <!-- Existing Scripts -->
        <script src="components/global.js"></script>
        <script src="assets/js/page_specific/home.js"></script>
    </body>
    </html>
    --- End of index.html ---
├── LICENSE
├── [pages]/
│   ├── about.html
│       --- Start of about.html ---

│       --- End of about.html ---
│   ├── add other pages here
│   └── faq.html
│       --- Start of faq.html ---

│       --- End of faq.html ---
└── README.md
    --- Start of README.md ---
    # dokidokimoddingcentral-new
    The new and improved site for DDMC.
    --- End of README.md ---
